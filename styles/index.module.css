@charset "utf-8";

.videobg {
  width: 100%;
  height: calc(100vh);
  overflow: hidden;
  position: relative;
  z-index: -10;
}

.videobg iframe {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100vw;
  height: 60vw;
}

#itopm {
  max-width: 1080px;
  margin: auto;
}

.itopm {
  display: flex;
  flex-wrap: wrap;
  margin: 20px auto;
  height: 200px;
}

.topms1 {
  width: 500px;
  height: 120px;
}

.topms2 {
  width: calc(100% - 500px);
  word-break: keep-all;
  margin: auto;
}

.topms1 h2 {
  width: 500px;
  letter-spacing: 3px;
  padding: 5px;
  font-family: "Inter", "Zen Kaku Gothic New", sans-serif;
  font-weight: 500;
  font-style: normal;
  border-bottom: solid 0px;
}

.topms1 h2 span {
  color: #ffffff;
  background-color: #000000;
  border: solid 1px var(--foreground);
  padding: 5px;
}

.topms1 h3 {
  position: relative;
  top: -96px;
  height: 0px;
  margin: 0;
  width: 500px;
  font-family: "Mrs Saint Delafield", cursive;
  font-weight: 400;
  font-style: normal;
  font-size: 6rem;
  font-style: normal;
  color: var(--foreground);
  z-index: -10;
  border: 0px;
}

.topml {
  text-align: right;
}

.topml2 {
  flex-flow: row-reverse;
}

.wrapper {
  margin-left: 0;
  /* 320pxから0に変更 */
  font-family: var(--font-en), var(--font-jp);
  font-weight: 700;
  transition: margin-left 0.6s ease-out;
}

.wrapper.header-visible {
  margin-left: 320px;
}

/* ヒーローセクション（最初の全画面表示部分） */
.hero {
  min-height: 100vh;
  height: 100vh;
  width: 100%;
  top: 0px;
  z-index: 1;
  position: absolute;
  background-color: #ffffff2b;
  box-sizing: border-box;
  overflow: hidden;
}

.heroFrame {
  position: absolute;
  inset: 2rem;
  border: 1px solid #000;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  z-index: 1;
  /* コンテンツを背景より前面に */
}

.heroHeader {
  display: flex;
  gap: 1rem;
  align-items: flex-start;
  margin: 30px;
}

.logo svg {
  width: 40px;
  aspect-ratio: 40/95;
  margin: 10px 20px;
  height: auto;
  /* アスペクト比を維持 */
  fill: currentColor;
}

.logo .cls-1 {
  fill: none;
  stroke: currentColor;
  stroke-miterlimit: 10;
  stroke-width: 166px;
}

.titleArea {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.titleArea h1 {
  font-family: var(--font-title);
  font-size: 3rem;
  font-weight: 400;
  letter-spacing: 0.1em;
  margin: 20px 0 0;
  line-height: 1;
}

.titleArea p {
  font-family: var(--font-jp);
  font-size: 0.875rem;
  letter-spacing: 0.76em;
  margin: 0;
}

.scheduleArea {
  align-self: flex-end;
  text-align: right;
}

.scheduleArea h2 {
  font-family: var(--font-title);
  font-size: 3rem;
  font-weight: 400;
  margin: 0;
  letter-spacing: 0em;
  margin-bottom: 2rem;
  position: relative;
  border: none;
}

.scheduleJp {
  font-family: var(--font-jp);
  font-size: 1rem;
  margin: 0;
  letter-spacing: 4px;
  top: 0.5rem;
  width: auto;
}

.dates {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  right: -7px;
  bottom: -16px;
  position: relative;
}

.dateRow {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 1rem;
}

.day {
  font-family: var(--font-title);
  font-size: 0.875rem;
  border: 1px solid currentColor;
  border-radius: 999px;
  width: 30px;
  padding: 0.25rem 1rem;
}

.dateGroup {
  display: flex;
  align-items: baseline;
  gap: 0.5rem;
  justify-content: end;
}

.dateNumber {
  font-family: var(--font-title);
  font-size: 9rem;
  font-weight: 400;
  letter-spacing: 0.1em;
  line-height: 1;
  letter-spacing: 0px;

}

.year {
  font-family: var(--font-title);
  font-size: 2.5rem;
  top: 20px;
  right: 5px;
  font-weight: 400;
  position: relative;
}



.content {
  max-width: 1200px;
  margin: 0 auto;
  transform: translateY(20px);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.content.visible {
  opacity: 1;
  transform: translateY(0);
}


.aboutcontainer {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 0rem;
}

.aboutitem {
  display: flex;
  gap: 1rem;
  width: 100%;
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.6s ease, transform 0.6s ease;
}

.aboutitem:nth-child(2) {
  flex-direction: row-reverse;
}

.aboutitem.active {
  opacity: 1;
  transform: translateY(0);
}

.abouttitle {
  writing-mode: vertical-rl;
  text-orientation: mixed;
  font-family: var(--font-title);
  font-size: 3rem;
  font-weight: 400;
  height: 500px;
}

.titlebox {
  border: 2px solid #000;
  padding: 1px 2rem;
}

.titlebox h2 {
  font-family: var(--font-jp);
  border: solid 0px;
  margin: 0;
  white-space: nowrap;
  font-size: 4rem;
  letter-spacing: 2px;
  font-weight: 700;
  padding: 0;
  line-height: 5rem;
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 0.6s ease, transform 0.6s ease;
  transition-delay: 0.8s;
}

.active .titlebox h2 {
  opacity: 1;
  transform: translateY(0);
}

.abouarrow {
  position: relative;
  width: 2px;
  height: 0;
  background: #000;
  margin: 0 1rem;
  transition: height 1s ease;
}

.active .abouarrow {
  height: 340px;
  /* 矢印の高さを復活 */
}

.abouarrow::after {
  content: '';
  position: absolute;
  right: -5px;
  bottom: 0;
  width: 10px;
  height: 10px;
  border-top: 2px solid #000;
  border-right: 2px solid #000;
  transform: rotate(135deg);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.active .abouarrow::after {
  opacity: 1;
}

/* カーブ付き矢印のコンテナ */
.curveContainer {
  position: absolute;
  bottom: 0;
  /* -100pxから0に変更 */
  left: 0;
  width: 684px;
  /* SVGの実際の幅に合わせる */
  height: 194px;
  /* SVGの実際の高さに合わせる */
  opacity: 0;
  transition: opacity 0.3s ease;
  transition-delay: 1s;
  pointer-events: none;
  /* マウスイベントを無視 */
}

.active .curveContainer {
  opacity: 1;
}

/* カーブ付き矢印のSVG */
.curve {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  overflow: hidden;
  line-height: 0;
  transform: rotate(180deg);
  opacity: 0;
  transition: opacity 0.3s ease;
}

/* 2番目の要素は反転 */
.aboutitem:nth-child(2) .curve {
  transform: rotate(0deg);
}

.curve svg {
  position: relative;
  display: block;
  width: calc(100% + 1.3px);
  height: 330px;
}

.curve path {
  fill: none;
  stroke: var(--foreground);
  stroke-width: 1;
  stroke-miterlimit: 10;
  stroke-dasharray: 3000;
  /* 値を増やして線が完全に表示されるように */
  stroke-dashoffset: 3000;
}

/* アクティブ時のアニメーション */
.active .curve {
  opacity: 1;
}

/* 1番目の要素は左から右へ */
.aboutitem:nth-child(1) .curve path {
  animation: drawPathForward 2s ease forwards;
}

/* 2番目の要素は右から左へ */
.aboutitem:nth-child(2) .curve path {
  animation: drawPathBackward 2s ease forwards;
}

.active .curve .arrowHead {
  animation: fadeInArrow 0.5s ease forwards;
  animation-delay: 1.8s;
}

/* アニメーションのリセット */
.aboutitem:not(.active) .curve path {
  animation: none;
  stroke-dashoffset: 3000;
}

.aboutitem:not(.active) .curve .arrowHead {
  animation: none;
  opacity: 0;
}

/* 左から右へのアニメーション */
@keyframes drawPathForward {
  from {
    stroke-dashoffset: 3000;
  }

  to {
    stroke-dashoffset: 0;
  }
}

/* 右から左へのアニメーション */
@keyframes drawPathBackward {
  from {
    stroke-dashoffset: -3000;
  }

  to {
    stroke-dashoffset: 0;
  }
}

.arrowHead {
  fill: none;
  stroke: var(--foreground);
  stroke-width: 1;
  stroke-miterlimit: 10;
  opacity: 0;
}

@keyframes fadeInArrow {
  to {
    opacity: 1;
  }
}

/* 2番目の要素（what's event?）のみ右寄せ */
.aboutitem:nth-child(2) .curveContainer {
  transform: scaleX(-1);
  right: 0;
  left: auto;
}

/* 矢印の位置調整 */
.aboutitem:nth-child(2) .curve {
  transform-origin: top right;
}

.abouttext {
  max-width: min-content;
  opacity: 0;
  transform: translateX(20px);
  transition: opacity 0.6s ease, transform 0.6s ease;
  transition-delay: 0.6s;
}

.active .abouttext {
  opacity: 1;
  transform: translateX(0);
}

.abouttext p {
  font-family: var(--font-jp);
  font-size: 1.4rem;
  letter-spacing: 1px;
  line-height: 2;
}

@media (max-width: 768px) {

  .about-item,
  .about-item.reverse {
    flex-direction: column;
    text-align: left;
    margin-bottom: 4rem;
  }

  .about-title {
    min-width: auto;
    width: 100%;
  }

  .about-en {
    position: relative;
    top: 0;
    margin-bottom: 0.5rem;
    display: block;
  }

  .about-item.reverse .about-en {
    text-align: left;
  }

  .title-box {
    display: inline-block;
  }

  .about-arrow {
    width: 60px;
    margin: 1rem 0;
  }

  .about-text {
    padding-top: 1rem;
  }
}

@media screen and (max-width: 900px) {

  .topms1,
  .topms1 h2,
  .topms1 h3 {
    width: 340px;
  }

  .topms2 {
    width: calc(100% - 340px);
  }

  .topms1 h2 {
    font-size: 1.5rem;
  }

  .topms1 h3 {
    font-size: 3rem;
  }

  .itopm {
    height: 150px;
  }

  .videobg {
    width: 100%;
    height: 100vh;
    aspect-ratio: 16 / 9;
  }
}

@media screen and (max-width: 600px) {

  .topms1,
  .topms1 h2,
  .topms1 h3 {
    width: 99%;
    top: -94px;
  }

  .itopm {
    height: auto;
  }

  .topms2 {
    width: 100%;
  }

  .topms2 p {
    padding: 0px 10px;
  }

  .topml2 {
    flex-flow: column;
  }

  .topml {
    text-align: left;
  }

  .itopm {
    margin: 25px auto;
  }

  .topms1 {
    height: 110px;
  }
}

@media (max-aspect-ratio: 16 / 9) {
  .videobg iframe {
    height: 100%;
    width: 5000px;
    left: 50%;
  }

  @media screen and (max-width: 500px) {
    .videobg iframe {
      height: 100%;
      width: 5000px;
      left: 50%;
    }

    .videobg {
      height: 40%;
    }
  }
}

@media (aspect-ratio: 16 / 9),
(min-aspect-ratio: 16 / 9) {
  .videobg iframe {
    width: 100%;
    top: 50%;
  }
}

@media screen and (min-width: 1150px) {
  @media (min-aspect-ratio: 16 / 9) {
    .videobg {
      width: calc(100%);
      height: calc(100vh);
      height: calc(100svh);
    }
  }
}

.curveArrow {
  width: 684px;
  height: 194px;
  margin: -100px auto 0;
  opacity: 0;
  transition: opacity 0.3s ease;
  transition-delay: 1s;
  pointer-events: none;
}

.curveArrow.active {
  opacity: 1;
}

.curveArrow svg {
  width: 100%;
  height: 100%;
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000;
  transition: stroke-dashoffset 1s ease;
  transition-delay: 0.8s;
  transform: scale(0.5);
  transform-origin: top left;
}

.curveArrow.active svg {
  stroke-dashoffset: 0;
}

/* 2番目の要素（what's event?）のカーブ矢印を反転 */
.aboutitem:nth-child(2)+.curveArrow {
  transform: scaleX(-1);
}

.aboutitem:nth-child(2)+.curveArrow svg {
  transform-origin: top right;
}